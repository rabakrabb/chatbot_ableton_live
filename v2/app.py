import streamlit as st
from dotenv import load_dotenv
from vector_store import VectorStore
from llm_utils import generate_response
from rag_utils import create_embeddings # load_chunks beh칬vs inte direkt i app.py l칛ngre
from numpy import dot
from numpy.linalg import norm
import os

st.set_page_config(
    page_title="The Ableton Live 12 RAG-Bot", # Uppdaterad titel
    layout="centered",
    initial_sidebar_state="expanded",
    page_icon="游꿫",
)

load_dotenv()

# --- CSS styling ---
st.markdown("""
<style>
:root {
    --primaryColor: #FF6F61;
    --backgroundColor: #004D4D;
    --secondaryBackgroundColor: #006666;
    --font-family: "Arial, sans-serif";
    --textColor: white;
}
body, main {
    margin: 0; padding: 0; min-height: 100vh;
    background-color: var(--backgroundColor) !important;
    color: var(--textColor) !important;
    font-family: var(--font-family) !important;
}
section.main, div.block-container {
    max-width: 800px !important;
    margin: 80px auto 40px auto !important;
    background-color: var(--secondaryBackgroundColor) !important;
    padding: 30px 40px !important;
    border-radius: 12px !important;
    box-shadow: 0 4px 15px rgba(0,0,0,0.3) !important;
    color: var(--textColor) !important;
}
h1, h2, h3 {
    color: var(--primaryColor) !important;
    font-weight: 700 !important;
    margin-top: 0 !important;
}
.stTextInput > div > div > input {
    width: 100% !important;
    background-color: white !important;
    color: black !important;
    border: 2px solid var(--primaryColor) !important;
    border-radius: 6px !important;
    padding: 8px !important;
    font-family: var(--font-family) !important;
}
.stTextInput > div > div > input::placeholder {
    color: #888 !important;
}
div.stButton > button {
    background-color: var(--primaryColor) !important;
    color: white !important;
    border-radius: 6px !important;
    padding: 8px 16px !important;
    font-weight: 600 !important;
    cursor: pointer !important;
    transition: background-color 0.3s ease !important;
    font-family: var(--font-family) !important;
}
div.stButton > button:hover {
    background-color: #e65b50 !important;
}
[data-testid="stSidebar"] {
    background-color: var(--secondaryBackgroundColor) !important;
}
[data-testid="stSidebar"] * {
    color: var(--textColor) !important;
}

/* Fix f칬r selectbox (dropdown) */
div[role="combobox"] > div > div > select {
    background-color: white !important;
    color: black !important;
    border: 2px solid var(--primaryColor) !important;
    border-radius: 6px !important;
    padding: 6px 8px !important;
    font-family: var(--font-family) !important;
}
</style>
""", unsafe_allow_html=True)

@st.cache_resource(show_spinner=False)
def initialize_vector_store() -> VectorStore:
    embeddings_parquet_path = "full_embeddings.parquet" # S칬kv칛g till din nya embeddings-fil f칬r hela manualen

    store = VectorStore()
    if store.load(embeddings_parquet_path): # F칬rs칬k ladda fr친n fil
        print(f"Vector store loaded from {embeddings_parquet_path}")
        return store
    else:
        st.error(f"Embeddingsfilen '{embeddings_parquet_path}' saknas. V칛nligen k칬r 'generate_and_save_embeddings.py' f칬rst f칬r att skapa den.")
        st.stop() # Stoppa appen om embeddings inte kan laddas

vector_store = initialize_vector_store()

# --- Meny ---
st.sidebar.title("Navigation")

st.sidebar.markdown("---")
answer_language = st.sidebar.selectbox(
    "Response Language:",
    options=["English", "Swedish"],
    index=0
)

page = st.sidebar.radio("Select a page", ["Chatbot", "Evaluation", "About the app"], index=0)

if page == "Chatbot":
    st.title("The Ableton Live 12 RAG-Bot") # Uppdaterad titel
    query = st.text_input("Ask your question:")
    if query:
        query_emb = create_embeddings([query])[0]
        results = vector_store.semantic_search(query_emb, k=5)
        top_texts = [r["text"] for r in results]
        joined_texts = "\n\n".join([doc['content'] if isinstance(doc, dict) else doc.page_content for doc in top_texts])
        answer = generate_response(query, joined_texts, answer_language=answer_language)
        st.markdown("### Answer:")
        st.write(answer)

elif page == "About the app":
    st.title("About the app")
    st.write("""
This chatbot is built using semantic search and retrieval-augmented generation (RAG) to answer questions about Ableton Live 12.

It uses precomputed embeddings of the Ableton Live 12 manual chunks and Google's AI technology to generate context-aware answers.

Created by Martin Blomqvist during the Data Scientist program at EC Utbildning 2025.

For more information:
- [LinkedIn](https://www.linkedin.com/in/martin-blomqvist)
- [GitHub](https://github.com/rabakrabb)
""")

elif page == "Evaluation":
    st.title("Evaluate Chatbot Responses")
    st.markdown("Test how well the chatbot performs by selecting a question and comparing the AI's answer with the ideal answer.")

    # Fr친gor och svar p친 engelska (ut칬kad f칬r hela manualen)
    predefined_qa_en = [
        {"question": "How do I use automation in Ableton Live to change a parameter over time?", "ideal_answer": "Automation is drawn directly in tracks using breakpoint envelopes. Select the parameter you want to automate, and then draw its curve using the pen tool or by clicking and dragging breakpoints."},
        {"question": "What is the purpose of the Arrangement View in Ableton Live?", "ideal_answer": "The Arrangement View is a linear timeline for recording, arranging, and editing MIDI and audio clips in a traditional song structure."},
        {"question": "Explain the function of Sends and Returns in Ableton Live.", "ideal_answer": "Sends route a portion of a track's signal to a Return track, where effects can be applied. This allows multiple tracks to share the same effect processing, saving CPU and providing a consistent sound."},
        {"question": "How can I create a custom drum rack in Ableton Live?", "ideal_answer": "Drag individual samples or instruments into the pads of an empty Drum Rack. You can then configure each pad's settings and effects independently."},
        {"question": "What is the difference between hot-swapping and replacing a device?", "ideal_answer": "Hot-swapping allows you to audition different devices while keeping their current settings intact. Replacing a device permanently swaps it with a new one, discarding the old device's settings."},
        {"question": "How do I consolidate tracks or clips in Ableton Live?", "ideal_answer": "Select the desired clips or a range of time across multiple tracks, then go to the Edit menu and choose 'Consolidate Time to New Track' or 'Consolidate' (Cmd/Ctrl+J)."},
        {"question": "What are Scenes in the Session View and how are they used?", "ideal_answer": "Scenes in Session View are horizontal rows that contain a collection of clips, typically representing a section of a song. Launching a scene plays all clips within that row simultaneously, useful for live performance and improvisation."},
        {"question": "How can I reduce CPU usage in Ableton Live when my project is complex?", "ideal_answer": "To reduce CPU usage, you can freeze tracks, flatten tracks, reduce buffer size, disable unused devices, or use fewer CPU-intensive effects."},
        {"question": "Describe the function of the Follow Actions feature for MIDI and audio clips.", "ideal_answer": "Follow Actions allow you to define what happens after a clip finishes playing, such as playing another clip, stopping, retriggering itself, or launching a different scene. This is useful for creating dynamic arrangements and generative music."},
        {"question": "How do I set up an external MIDI controller in Ableton Live 12?", "ideal_answer": "Go to Live's Preferences, then 'Link/Tempo/MIDI'. Select your controller from the 'Control Surface' dropdown, enable its 'Track' and 'Remote' switches in the 'MIDI Ports' section, and ensure its MIDI input is active."}
    ]

    # Fr친gor och svar p친 svenska (ut칬kad f칬r hela manualen)
    predefined_qa_sv = [
        {"question": "Hur anv칛nder jag automation i Ableton Live f칬r att 칛ndra en parameter 칬ver tid?", "ideal_answer": "Automation ritas direkt i sp친ren med hj칛lp av brytpunktskuvert. V칛lj den parameter du vill automatisera och rita sedan dess kurva med pennverktyget eller genom att klicka och dra brytpunkter."},
        {"question": "Vad 칛r syftet med Arrangement View i Ableton Live?", "ideal_answer": "Arrangement View 칛r en linj칛r tidslinje f칬r inspelning, arrangering och redigering av MIDI- och ljudklipp i en traditionell l친tstruktur."},
        {"question": "F칬rklara funktionen av Sends och Returns i Ableton Live.", "ideal_answer": "Sends dirigerar en del av ett sp친rs signal till ett Return-sp친r, d칛r effekter kan appliceras. Detta g칬r att flera sp친r kan dela samma effektprocessering, vilket sparar CPU och ger ett konsekvent ljud."},
        {"question": "Hur kan jag skapa ett anpassat Drum Rack i Ableton Live?", "ideal_answer": "Dra individuella samplingar eller instrument till padsen i ett tomt Drum Rack. Du kan sedan konfigurera varje pads inst칛llningar och effekter oberoende av varandra."},
        {"question": "Vad 칛r skillnaden mellan hot-swapping och att ers칛tta en enhet?", "ideal_answer": "Hot-swapping l친ter dig provlyssna olika enheter samtidigt som deras nuvarande inst칛llningar beh친lls. Att ers칛tta en enhet byter ut den permanent mot en ny, vilket kasserar den gamla enhetens inst칛llningar."},
        {"question": "Hur konsoliderar jag sp친r eller klipp i Ableton Live?", "ideal_answer": "Markera 칬nskade klipp eller ett tidsintervall 칬ver flera sp친r, g친 sedan till menyn Redigera och v칛lj 'Consolidate Time to New Track' eller 'Consolidate' (Cmd/Ctrl+J)."},
        {"question": "Vad 칛r Scener i Session View och hur anv칛nds de?", "ideal_answer": "Scener i Session View 칛r horisontella rader som inneh친ller en samling klipp, typiskt representerande en sektion av en l친t. Att starta en scen spelar alla klipp inom den raden samtidigt, vilket 칛r anv칛ndbart f칬r liveframtr칛danden och improvisation."},
        {"question": "Hur kan jag minska CPU-anv칛ndningen i Ableton Live n칛r mitt projekt 칛r komplext?", "ideal_answer": "F칬r att minska CPU-anv칛ndningen kan du frysa sp친r, 'flattena' sp친r, minska buffertstorleken, inaktivera oanv칛nda enheter eller anv칛nda f칛rre CPU-intensiva effekter."},
        {"question": "Beskriv funktionen 'Follow Actions' f칬r MIDI- och ljudklipp.", "ideal_answer": "Follow Actions l친ter dig definiera vad som h칛nder efter att ett klipp spelats klart, till exempel att spela ett annat klipp, stoppa, 친terstarta sig sj칛lv, eller starta en annan scen. Detta 칛r anv칛ndbart f칬r att skapa dynamiska arrangemang och generativ musik."},
        {"question": "Hur st칛ller jag in en extern MIDI-kontroller i Ableton Live 12?", "ideal_answer": "G친 till Lives inst칛llningar, sedan 'Link/Tempo/MIDI'. V칛lj din kontroller fr친n rullgardinsmenyn 'Control Surface', aktivera dess 'Track' och 'Remote' omkopplare i sektionen 'MIDI Ports', och se till att dess MIDI-ing친ng 칛r aktiv."}
    ]

    # V칛lj spr친k
    predefined_qa = predefined_qa_en if answer_language == "English" else predefined_qa_sv

    st.markdown("### Select a predefined question:")
    question_idx = st.selectbox(
        "Choose a question:",
        options=list(range(len(predefined_qa))),
        format_func=lambda x: predefined_qa[x]["question"]
    )

    question = predefined_qa[question_idx]["question"]
    ideal_answer = predefined_qa[question_idx]["ideal_answer"]

    query_emb = create_embeddings([question])[0]
    results = vector_store.semantic_search(query_emb, k=15)
    top_texts = [r["text"] for r in results]
    joined_texts = "\n\n".join([doc['content'] if isinstance(doc, dict) else doc.page_content for doc in top_texts])
    model_answer = generate_response(question, joined_texts, answer_language=answer_language)


    st.markdown("### RAG-Bot's answer:")
    st.write(model_answer)

    st.markdown("### Ideal answer:")
    st.write(ideal_answer)

    no_answer_phrase = (
        "I found no relevant information in my sources. Try rephrasing your question or consult the Ableton Live 12 manual."
        if answer_language == "English"
        else "Jag hittade ingen relevant information i mina k칛llor. F칬rs칬k att omformulera din fr친ga eller konsultera Ableton Live 12 manualen."
    )

    if model_answer.strip() == no_answer_phrase.strip():
        score = 0.00
        st.markdown(f"### Similarity Score: `{score}` (AI did not provide an answer)")
    else:
        model_emb = create_embeddings([model_answer])[0]
        ideal_emb = create_embeddings([ideal_answer])[0]
        similarity = dot(model_emb, ideal_emb) / (norm(model_emb) * norm(ideal_emb))
        score = round(similarity, 2)
        st.markdown(f"### Similarity Score: `{score}`")

    if "eval_scores" not in st.session_state:
        st.session_state.eval_scores = []
    if "scored_ids" not in st.session_state:
        st.session_state.scored_ids = set()

    score_id = (question.strip(), model_answer.strip())
    if score_id not in st.session_state.scored_ids:
        st.session_state.eval_scores.append(score)
        st.session_state.scored_ids.add(score_id)

    valid_scores = [s for s in st.session_state.eval_scores if s is not None]
    if valid_scores:
        avg_score = sum(valid_scores) / len(valid_scores)
        st.markdown(f"### Session Average Score: `{avg_score:.2f}` (based on {len(valid_scores)} evaluations)")

    if st.button("Reset Session Scores"):
        st.session_state.eval_scores = []
        st.session_state.scored_ids = set()
        st.rerun()

# --- Diskussion ---
# Min modell anv칛nder de specifika kapitel i Ableton Live 12-manualen som ber칬r MIDI f칬r att tr칛na chatboten.
# Den 칛r tr칛nad f칬r nyb칬rjaren som vill l칛ra sig om MIDI-musik och MIDI-skapande i programmet Ableton Live 12.
# I verkligheten kan denna chatbot anv칛ndas av nya anv칛ndare eller befintliga anv칛ndare som vill ha snabba svar
# utan att beh칬va sl친 upp det i manualen. Det finns enligt mig stor potential i chatboten och den kan med enkelhet
# byggas vidare p친 f칬r att hantera hela manualen och ge en mer 칬vergripande hj칛lp.

# --- Potentiella utmaningar och m칬jligheter ---
# - Aff칛rsm칛ssiga
#     - M칬jligheter:
#         - Kostnadsbesparingar, genom minskat tryck p친 kundsupport hos f칬retaget.
#         - Skalbarhet, en bot kan hantera tusentals fr친gor samtidigt, en m칛nsklig support har sv친rt att tillgodose detta.
#         - 24/7 tillg칛nglighet, kundsupport dygnet runt, 칬verallt.
#         - Konkurrensf칬rdel, en v칛lfungerande AI-support kan ge f칬retaget f칬rdelar gentemot konkurrenter.
#         - Engagemang/kundn칬jdhet, att ha en effektiv bot n칛ra till hands kan 칬ka anv칛ndarn칬jdheten och lojaliteten.
#     - Utmaningar:
#         - Initiala kostnader, utveckling, tr칛ning och underh친ll av en stabil och h친llbar RAG-l칬sning kostar pengar och
#         kan inneb칛ra substantiella investeringar (API-kostnader f칬r LLM, infrastruktur).
#         - Underh친ll av datak칛llan, programmet uppdateras och manualen likas친, detta kr칛ver ett kontinuerligt arbete f칬r
#         att s칛kerst칛lla kvalitet. Hur s칛kerst칛lls att uppdateringar i manualen snabbt 친terspeglas i botens kunskapsbas?
#         Detta kr칛ver en robust pipeline f칬r datafl칬de och uppdateringar av vektorbutiken.
#         - Kvalitetskontroll, felaktiga svar kan skada varum칛rket. Hur 칬vervakas och kontrolleras botens svar l칛mpligt i
#         en st칬rre skala? Detta inkluderar att definiera metrics f칬r svarskvalitet och att implementera feedbackmekanismer
#         fr친n anv칛ndare.
#         - Integration, hur kan boten integreras i befintlig supportstruktur eller inom Ableton Live-programvaran? Detta kan
#         vara tekniskt komplext och kr칛va anpassningar f칬r att passa in i f칬retagets befintliga ekosystem.
#         - Adoption, kommer anv칛ndarna att ta till sig boten och lita p친 inneh친llet? Detta kan kr칛va tydliga evaluerings-
#         presentationer och en transparent kommunikation om botens kapacitet och begr칛nsningar.

# - Etiska perspektiv:
#     - Hallucinationer och felaktigheter, 칛ven med en restriktiv systemprompt och s칛kerhets친tg칛rder s친 kan en RAG-bot
#     "hallucinera" och hitta p친 fakta eller tolka kontexten felaktigt.
#         - Utmaningen ligger i hur dessa fall hanteras av anv칛ndaren. Kan felaktiga instruktioner frustrera anv칛ndare eller
#         till och med skada till exempel systeminst칛llningar? Att agera p친 felaktiga instruktioner fr친n en bot kan i v칛rsta
#         fall leda till dataf칬rlust eller att ett musikprojekt inte kan slutf칬ras.
#         - 칀tg칛rder kan h칛r vara att till exempel vara tydlig med ansvarsfriskrivning, ge anv칛ndaren m칬jlighet att rapportera
#         felaktigheter. En 칬vervakning av konversationer kan identifiera problemomr친den. Likt i den aktuella Ableton-boten
#         b칬r systemprompten designas s친 att den uttryckligen endast svarar utifr친n k칛llmaterialet, med till exempel en s친
#         kallad "no answer"-hantering. Detta sista steg 칛r avg칬rande f칬r att bygga f칬rtroende och minimera felinformation.
#     - Bias, om den underliggande LLM:en har tr칛nats p친 data som inneh친ller bias kan detta eventuellt "smitta av sig" p친 svaren,
#     칛ven om en gedigen RAG-kontext minskar denna risk.
#         - Utmaningen kan vara huruvida manualen 칛r respresentativ. Exempelvis kan vissa spr친kliga formuleringar, val av exempel,
#         eller betoning p친 vissa arbetsfl칬den oavsiktligt gynna specifika anv칛ndargrupper eller musikgenrer, vilket kan leda till
#         att boten inte 칛r lika hj칛lpsam f칬r alla anv칛ndare. Kan det finnas bias i spr친ket eller strukturen - 칛ven om det
#         r칬r sig om en teknisk manual?
#         - 칀tg칛rder f칬r att hantera detta kan vara en kontinuerlig granskning av b친de den underliggande LLM:ens beteende och
#         k칛llmaterialets inneh친ll. En transparent kommunikation om botens k칛llor och begr칛nsningar 칛r ocks친 viktig.
#     - Anv칛ndardata och sekretess, hur hanteras anv칛ndardata d칛r boten till exempel sparar konversationer f칬r vidare utveckling
#     och utv칛rdering? Efterlever detta GDPR och liknande regelverk?
#         - Utmaningen, 칛r anv칛ndare inf칬rst친dda och bekv칛ma med att deras interaktioner loggas och 칬vervakas? B칬r detta vara
#         valfritt eller p친verkar det kvaliteten p친 utv칛rderingen?
#         - 칀tg칛rder, en tydlig integritetspolicy och m칬jlighet att avst친 fr친n datainsamling 칛r avg칬rande f칬r att bygga
#         anv칛ndarf칬rtroende och s칛kerst칛lla en etisk drift.
#     - Transparens, 칛r det tydligt och klart f칬r anv칛ndaren att den interagerar med en AI och inte en m칛nsklig supportagent?
#     Detta 칛r viktigt f칬r att hantera anv칛ndarnas f칬rv칛ntningar. Om anv칛ndare tror att de pratar med en m칛nniska kan det leda
#     till frustration n칛r boten inte f칬rst친r mer komplexa problem eller brister i empati. En tydlig "Jag 칛r en AI-assistent"-disclaimer
#     칛r en etisk standard.

# - Andra relevanta perspektiv:
#     - Tekniska begr칛nsningar:
#         - Omf친ng, denna bot 칛r begr칛nsad till den data den 칛r tr칛nad p친. Den kan inte svara p친 fr친gor utanf칬r kontexten, vilket
#         kan vara frustrerande f칬r anv칛ndaren.
#         - Komplexa eller nyanserade fr친gor, LLM:er kan ha sv친rt att resonera kring och tyda v칛ldigt komplexa flerstegs- eller
#         tvetydiga fr친gor, vilka kr칛ver en djupare f칬rst친else kring kontexten utanf칬r det som st친r explicit i manualen.
#         - Latens/Svarstid, API-anrop till LLM:er kan ibland medf칬ra latens, som kan p친verka anv칛ndarupplevelsen negativt om
#         svarstiden blir alltf칬r l친ng. I en kreativ process kan en snabb respons vara avg칬rande f칬r att uppr칛tth친lla anv칛ndarens flow.
#         - Infrastruktur, att hosta och skala en RAG-bot i stor skala kan kr칛va en stor satsning p친 molninfrastruktur. vilket
#         ytterligare bidrar till driftskostnaderna.
#     - Anv칛ndarupplevelse (UX):
#         - Den "no answer"-hantering, som denna bot inkluderar 칛r viktigt utifr친n att vara transparent med att boten inte
#         har n친got svar, och anv칛ndaren kan tydligt se att den inte "gissar". Detta 칛r en nyckelkomponent f칬r att bibeh친lla anv칛ndarens
#         f칬rtroende.
#         - Interaktivitet, hur kan boten g칬ras 칛n mer interaktiv? I vilken m친n ska den vidarebefordra anv칛ndaren till en m칛nsklig
#         support, och n칛r? Att implementera en s칬ml칬s 칬verl칛mning till m칛nsklig agent f칬r komplexa eller ol칬sta fr친gor kan f칬rb칛ttra UX
#         avsev칛rt. M칬jligheten att st칛lla f칬ljdfr친gor, eller att boten proaktivt f칬resl친r n칛sta steg eller relaterade 칛mnen baserat p친
#         konversationen, kan ocks친 berika upplevelsen.

# --- Avslutning ---
# En RAG-bot av denna typ har enorm potential att revolutionera hur vi interagerar med information och support inom specifika omr친den
# och dom칛ner. Med n칬dv칛ndiga f칬rsiktighets친tg칛rder, transparens och ett kontinuerligt kvalitetsarbete kan denna typ av l칬sningar bli
# ledande i framtidens informationsfl칬de. Genom att ta h칬jd f칬r utmaningarna och s칛tta in effektiva mot친tg칛rder kan nyttan med r친ge
# 칬verv칛ga riskerna. Ledordet h칛r 칛r att g칬ra det kvalitativt, transparent, robust.